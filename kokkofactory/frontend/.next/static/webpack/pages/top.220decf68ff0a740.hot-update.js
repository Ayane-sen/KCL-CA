"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/top",{

/***/ "./src/components/WeatherApi.tsx":
/*!***************************************!*\
  !*** ./src/components/WeatherApi.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchWeather: () => (/* binding */ fetchWeather)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/lib/axios.js\");\n\nconst apiKey = \"6741c59245f17c8fe12f92fc3959c1d8\";\nif (!apiKey) {\n    throw new Error('APIキーが設定されていません。環境変数を確認してください。');\n}\nconst city = 'Fukuoka,JP'; // 福岡県飯塚市\nconst fetchWeather = async (date)=>{\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(apiKey, \"&units=metric&lang=ja\");\n    console.log(url); // URLをコンソールに表示して、正しいか確認\n    //const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric&lang=ja`;\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(url);\n        console.log(response.data); // レスポンス内容を確認\n        const data = response.data;\n        return {\n            temperature: data.main.temp,\n            weather: data.weather[0].description\n        };\n    } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n        if (axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isAxiosError(error)) {\n            var _error_response;\n            // Axios エラーの場合、詳細な情報を表示\n            console.error((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.data);\n        }\n        throw new Error('天気データの取得に失敗しました');\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9XZWF0aGVyQXBpLnRzeCIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQjtBQUUxQixNQUFNQyxTQUFTQyxrQ0FBdUM7QUFDdEQsSUFBSSxDQUFDRCxRQUFRO0lBQ1QsTUFBTSxJQUFJSSxNQUFNO0FBQ3BCO0FBRUEsTUFBTUMsT0FBTyxjQUFjLFNBQVM7QUFPN0IsTUFBTUMsZUFBZSxPQUFPQztJQUUvQixNQUFNQyxNQUFNLHFEQUFtRVIsT0FBZEssTUFBSyxXQUFnQixPQUFQTCxRQUFPO0lBQ3RGUyxRQUFRQyxHQUFHLENBQUNGLE1BQU0sd0JBQXdCO0lBRTFDLCtHQUErRztJQUMvRyxJQUFJO1FBQ0EsTUFBTUcsV0FBVyxNQUFNWiw2Q0FBS0EsQ0FBQ2EsR0FBRyxDQUFDSjtRQUNqQ0MsUUFBUUMsR0FBRyxDQUFDQyxTQUFTRSxJQUFJLEdBQUcsYUFBYTtRQUN6QyxNQUFNQSxPQUFPRixTQUFTRSxJQUFJO1FBQzFCLE9BQU87WUFDSEMsYUFBYUQsS0FBS0UsSUFBSSxDQUFDQyxJQUFJO1lBQzNCQyxTQUFTSixLQUFLSSxPQUFPLENBQUMsRUFBRSxDQUFDQyxXQUFXO1FBQ3hDO0lBQ0osRUFBRSxPQUFPQyxPQUFPO1FBQ1pWLFFBQVFVLEtBQUssQ0FBQyxnQ0FBZ0NBO1FBQzlDLElBQUlwQiw2Q0FBS0EsQ0FBQ3FCLFlBQVksQ0FBQ0QsUUFBUTtnQkFFYkE7WUFEZCx3QkFBd0I7WUFDeEJWLFFBQVFVLEtBQUssRUFBQ0Esa0JBQUFBLE1BQU1SLFFBQVEsY0FBZFEsc0NBQUFBLGdCQUFnQk4sSUFBSTtRQUN0QztRQUNBLE1BQU0sSUFBSVQsTUFBTTtJQUNwQjtBQUNKLEVBQUUiLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvS0NMLUNBL2tva2tvZmFjdG9yeS9mcm9udGVuZC9zcmMvY29tcG9uZW50cy9XZWF0aGVyQXBpLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xyXG5cclxuY29uc3QgYXBpS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfV0VBVEhFUl9BUElfS0VZO1xyXG5pZiAoIWFwaUtleSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdBUEnjgq3jg7zjgYzoqK3lrprjgZXjgozjgabjgYTjgb7jgZvjgpPjgILnkrDlooPlpInmlbDjgpLnorroqo3jgZfjgabjgY/jgaDjgZXjgYTjgIInKTtcclxufVxyXG5cclxuY29uc3QgY2l0eSA9ICdGdWt1b2thLEpQJzsgLy8g56aP5bKh55yM6aOv5aGa5biCXHJcblxyXG5leHBvcnQgdHlwZSBXZWF0aGVyRGF0YSA9IHtcclxuICAgIHRlbXBlcmF0dXJlOiBudW1iZXI7XHJcbiAgICB3ZWF0aGVyOiBzdHJpbmc7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZmV0Y2hXZWF0aGVyID0gYXN5bmMgKGRhdGU6IERhdGUpOiBQcm9taXNlPFdlYXRoZXJEYXRhPiA9PiB7XHJcbiAgIFxyXG4gICAgY29uc3QgdXJsID0gYGh0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP3E9JHtjaXR5fSZhcHBpZD0ke2FwaUtleX0mdW5pdHM9bWV0cmljJmxhbmc9amFgO1xyXG4gICAgY29uc29sZS5sb2codXJsKTsgLy8gVVJM44KS44Kz44Oz44K944O844Or44Gr6KGo56S644GX44Gm44CB5q2j44GX44GE44GL56K66KqNXHJcblxyXG4gICAgLy9jb25zdCB1cmwgPSBgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT0ke2NpdHl9JmFwcGlkPSR7YXBpS2V5fSZ1bml0cz1tZXRyaWMmbGFuZz1qYWA7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KHVybCk7XHJcbiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7IC8vIOODrOOCueODneODs+OCueWGheWuueOCkueiuuiqjVxyXG4gICAgICAgIGNvbnN0IGRhdGEgPSByZXNwb25zZS5kYXRhO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHRlbXBlcmF0dXJlOiBkYXRhLm1haW4udGVtcCxcclxuICAgICAgICAgICAgd2VhdGhlcjogZGF0YS53ZWF0aGVyWzBdLmRlc2NyaXB0aW9uLFxyXG4gICAgICAgIH07XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyB3ZWF0aGVyIGRhdGE6XCIsIGVycm9yKTtcclxuICAgICAgICBpZiAoYXhpb3MuaXNBeGlvc0Vycm9yKGVycm9yKSkge1xyXG4gICAgICAgICAgICAvLyBBeGlvcyDjgqjjg6njg7zjga7loLTlkIjjgIHoqbPntLDjgarmg4XloLHjgpLooajnpLpcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvci5yZXNwb25zZT8uZGF0YSk7IFxyXG4gICAgICAgIH1cclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+Wkqeawl+ODh+ODvOOCv+OBruWPluW+l+OBq+WkseaVl+OBl+OBvuOBl+OBnycpO1xyXG4gICAgfVxyXG59O1xyXG4iXSwibmFtZXMiOlsiYXhpb3MiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfV0VBVEhFUl9BUElfS0VZIiwiRXJyb3IiLCJjaXR5IiwiZmV0Y2hXZWF0aGVyIiwiZGF0ZSIsInVybCIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsImdldCIsImRhdGEiLCJ0ZW1wZXJhdHVyZSIsIm1haW4iLCJ0ZW1wIiwid2VhdGhlciIsImRlc2NyaXB0aW9uIiwiZXJyb3IiLCJpc0F4aW9zRXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/WeatherApi.tsx\n"));

/***/ })

});